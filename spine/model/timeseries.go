// Package ns_p contains models for http://docs.eebus.org/spine/xsd/v1
package model

// Code generated by github.com/andig/xsd2go. DO NOT EDIT.

import "github.com/evcc-io/eebus/util"

// TimeSeriesIdType type
type TimeSeriesIdType uint

// TimeSeriesSlotIdType type
type TimeSeriesSlotIdType uint

// TimeSeriesSlotCountType type
type TimeSeriesSlotCountType TimeSeriesSlotIdType

// TimeSeriesTypeType type
type TimeSeriesTypeType TimeSeriesTypeEnumType

// TimeSeriesTypeEnumType type
type TimeSeriesTypeEnumType string

// TimeSeriesTypeEnumType constants
const (
	TimeSeriesTypeEnumTypePlan         TimeSeriesTypeEnumType = "plan"
	TimeSeriesTypeEnumTypeSingleDemand TimeSeriesTypeEnumType = "singleDemand"
	TimeSeriesTypeEnumTypeConstraints  TimeSeriesTypeEnumType = "constraints"
)

// TimeSeriesSlotType complex type
type TimeSeriesSlotType struct {
	TimeSeriesSlotId      *TimeSeriesSlotIdType        `json:"timeSeriesSlotId,omitempty"`
	TimePeriod            *TimePeriodType              `json:"timePeriod,omitempty"`
	Duration              *string                      `json:"duration,omitempty"`
	RecurrenceInformation *AbsoluteOrRecurringTimeType `json:"recurrenceInformation,omitempty"`
	Value                 *ScaledNumberType            `json:"value,omitempty"`
	MinValue              *ScaledNumberType            `json:"minValue,omitempty"`
	MaxValue              *ScaledNumberType            `json:"maxValue,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeSeriesSlotType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeSeriesSlotType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TimeSeriesSlotElementsType complex type
type TimeSeriesSlotElementsType struct {
	TimeSeriesSlotId      *ElementTagType                      `json:"timeSeriesSlotId,omitempty"`
	TimePeriod            *TimePeriodElementsType              `json:"timePeriod,omitempty"`
	Duration              *ElementTagType                      `json:"duration,omitempty"`
	RecurrenceInformation *AbsoluteOrRecurringTimeElementsType `json:"recurrenceInformation,omitempty"`
	Value                 *ElementTagType                      `json:"value,omitempty"`
	MinValue              *ElementTagType                      `json:"minValue,omitempty"`
	MaxValue              *ElementTagType                      `json:"maxValue,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeSeriesSlotElementsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeSeriesSlotElementsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TimeSeriesDataType complex type
type TimeSeriesDataType struct {
	TimeSeriesId   *TimeSeriesIdType    `json:"timeSeriesId,omitempty"`
	TimePeriod     *TimePeriodType      `json:"timePeriod,omitempty"`
	TimeSeriesSlot []TimeSeriesSlotType `json:"timeSeriesSlot"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeSeriesDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeSeriesDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TimeSeriesDataElementsType complex type
type TimeSeriesDataElementsType struct {
	TimeSeriesId   *ElementTagType             `json:"timeSeriesId,omitempty"`
	TimePeriod     *TimePeriodElementsType     `json:"timePeriod,omitempty"`
	TimeSeriesSlot *TimeSeriesSlotElementsType `json:"timeSeriesSlot,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeSeriesDataElementsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeSeriesDataElementsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TimeSeriesListDataType complex type
type TimeSeriesListDataType struct {
	TimeSeriesData []TimeSeriesDataType `json:"timeSeriesData,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeSeriesListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeSeriesListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TimeSeriesListDataSelectorsType complex type
type TimeSeriesListDataSelectorsType struct {
	TimeSeriesId     *TimeSeriesIdType     `json:"timeSeriesId,omitempty"`
	TimeSeriesSlotId *TimeSeriesSlotIdType `json:"timeSeriesSlotId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeSeriesListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeSeriesListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TimeSeriesDescriptionDataType complex type
type TimeSeriesDescriptionDataType struct {
	TimeSeriesId        *TimeSeriesIdType      `json:"timeSeriesId,omitempty"`
	TimeSeriesType      *TimeSeriesTypeType    `json:"timeSeriesType,omitempty"`
	TimeSeriesWriteable *bool                  `json:"timeSeriesWriteable,omitempty"`
	UpdateRequired      *bool                  `json:"updateRequired,omitempty"`
	MeasurementId       *MeasurementIdType     `json:"measurementId,omitempty"`
	Currency            *CurrencyType          `json:"currency,omitempty"`
	Unit                *UnitOfMeasurementType `json:"unit,omitempty"`
	Label               *LabelType             `json:"label,omitempty"`
	Description         *DescriptionType       `json:"description,omitempty"`
	ScopeType           *ScopeTypeType         `json:"scopeType,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeSeriesDescriptionDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeSeriesDescriptionDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TimeSeriesDescriptionDataElementsType complex type
type TimeSeriesDescriptionDataElementsType struct {
	TimeSeriesId        *ElementTagType `json:"timeSeriesId,omitempty"`
	TimeSeriesType      *ElementTagType `json:"timeSeriesType,omitempty"`
	TimeSeriesWriteable *ElementTagType `json:"timeSeriesWriteable,omitempty"`
	UpdateRequired      *ElementTagType `json:"updateRequired,omitempty"`
	MeasurementId       *ElementTagType `json:"measurementId,omitempty"`
	Currency            *ElementTagType `json:"currency,omitempty"`
	Unit                *ElementTagType `json:"unit,omitempty"`
	Label               *ElementTagType `json:"label,omitempty"`
	Description         *ElementTagType `json:"description,omitempty"`
	ScopeType           *ElementTagType `json:"scopeType,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeSeriesDescriptionDataElementsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeSeriesDescriptionDataElementsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TimeSeriesDescriptionListDataType complex type
type TimeSeriesDescriptionListDataType struct {
	TimeSeriesDescriptionData []TimeSeriesDescriptionDataType `json:"timeSeriesDescriptionData,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeSeriesDescriptionListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeSeriesDescriptionListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TimeSeriesDescriptionListDataSelectorsType complex type
type TimeSeriesDescriptionListDataSelectorsType struct {
	TimeSeriesId   *TimeSeriesIdType   `json:"timeSeriesId,omitempty"`
	TimeSeriesType *TimeSeriesTypeType `json:"timeSeriesType,omitempty"`
	MeasurementId  *MeasurementIdType  `json:"measurementId,omitempty"`
	ScopeType      *ScopeTypeType      `json:"scopeType,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeSeriesDescriptionListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeSeriesDescriptionListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TimeSeriesConstraintsDataType complex type
type TimeSeriesConstraintsDataType struct {
	TimeSeriesId                *TimeSeriesIdType           `json:"timeSeriesId,omitempty"`
	SlotCountMin                *TimeSeriesSlotCountType    `json:"slotCountMin,omitempty"`
	SlotCountMax                *TimeSeriesSlotCountType    `json:"slotCountMax,omitempty"`
	SlotDurationMin             *string                     `json:"slotDurationMin,omitempty"`
	SlotDurationMax             *string                     `json:"slotDurationMax,omitempty"`
	SlotDurationStepSize        *string                     `json:"slotDurationStepSize,omitempty"`
	EarliestTimeSeriesStartTime *AbsoluteOrRelativeTimeType `json:"earliestTimeSeriesStartTime,omitempty"`
	LatestTimeSeriesEndTime     *AbsoluteOrRelativeTimeType `json:"latestTimeSeriesEndTime,omitempty"`
	SlotValueMin                *ScaledNumberType           `json:"slotValueMin,omitempty"`
	SlotValueMax                *ScaledNumberType           `json:"slotValueMax,omitempty"`
	SlotValueStepSize           *ScaledNumberType           `json:"slotValueStepSize,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeSeriesConstraintsDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeSeriesConstraintsDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TimeSeriesConstraintsDataElementsType complex type
type TimeSeriesConstraintsDataElementsType struct {
	TimeSeriesId                *ElementTagType           `json:"timeSeriesId,omitempty"`
	SlotCountMin                *ElementTagType           `json:"slotCountMin,omitempty"`
	SlotCountMax                *ElementTagType           `json:"slotCountMax,omitempty"`
	SlotDurationMin             *ElementTagType           `json:"slotDurationMin,omitempty"`
	SlotDurationMax             *ElementTagType           `json:"slotDurationMax,omitempty"`
	SlotDurationStepSize        *ElementTagType           `json:"slotDurationStepSize,omitempty"`
	EarliestTimeSeriesStartTime *ElementTagType           `json:"earliestTimeSeriesStartTime,omitempty"`
	LatestTimeSeriesEndTime     *ElementTagType           `json:"latestTimeSeriesEndTime,omitempty"`
	SlotValueMin                *ScaledNumberElementsType `json:"slotValueMin,omitempty"`
	SlotValueMax                *ScaledNumberElementsType `json:"slotValueMax,omitempty"`
	SlotValueStepSize           *ScaledNumberElementsType `json:"slotValueStepSize,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeSeriesConstraintsDataElementsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeSeriesConstraintsDataElementsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TimeSeriesConstraintsListDataType complex type
type TimeSeriesConstraintsListDataType struct {
	TimeSeriesConstraintsData []TimeSeriesConstraintsDataType `json:"timeSeriesConstraintsData,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeSeriesConstraintsListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeSeriesConstraintsListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TimeSeriesConstraintsListDataSelectorsType complex type
type TimeSeriesConstraintsListDataSelectorsType struct {
	TimeSeriesId *TimeSeriesIdType `json:"timeSeriesId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeSeriesConstraintsListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeSeriesConstraintsListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}
